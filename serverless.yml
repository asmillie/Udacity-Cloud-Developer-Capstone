service:
  name: udacity-capstone

plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function
  - serverless-aws-documentation

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-2'}
  tracing:
    apiGateway: true
    lambda: true
  environment:
    SIGNED_URL_EXPIRATION: 300
    BREW_RECIPES_TABLE: BrewRecipes-${self:provider.stage}
    RECIPE_STEPS_TABLE: RecipeSteps-${self:provider.stage}
    RECIPE_STEP_THUMBNAILS_BUCKET: RecipeStepThumbnails-${self:provider.stage}
    RECIPE_STEP_RAW_IMAGES_BUCKET: RecipeStepRawImage-${self:provider.stage}
    METRIC_NAMESPACE: ${self:service.name}-${self:provider.stage}

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true
    packager: 'npm'
  documentation:
    api:
      info:
        version: v1.0.0
        title: Coffee Brewing Recipes for the Hario V60
        description: Search, create and share user-made recipes for brewing pour-over coffee with the Hario V60
    models:
      - name: CreateBrewRecipeRequest
        contentType: application/json
        schema: ${file(models/create-brew-recipe-request.json)}
      - name: UpdateBrewRecipeRequest
        contentType: application/json
        schema: ${file(models/update-brew-recipe-request.json)}
      - name: CreateRecipeStepRequest
        contentType: application/json
        schema: ${file(models/create-recipe-step-request.json)}
      - name: UpdateRecipeStepRequest
        contentType: application/json
        schema: ${file(models/update-recipe-step-request.json)}
  recipeStepImageUploadTopic: RecipeStepImageUploadTopic-${self:provider.stage}
  imageResizedTopic: ImageResizedTopic-${self:provider.stage}

functions:

  Auth:
    handler: src/lambda/auth/handler.handler
    iamRoleStatements: []

  GetBrewRecipes:
    handler: src/brew-recipes/lambda/http/getBrewRecipes.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:Query
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.BREW_RECIPES_TABLE}
      - Effect: Allow
        Action:
          - xray:PutTraceSegments
          - xray:PutTelemetryRecords
        Resource: '*'
      - Effect: Allow
        Action:
          - cloudwatch:PutMetricData
        Resource: '*'
    events:
      - http:
          method: get
          path: brewRecipes
          cors: true
          authorizer: Auth
          documentation:
            summary: Get all Brew Recipes
            description: Get all V60 Brew Recipes for the current logged-in User

    CreateBrewRecipe:
      handler: src/brew-recipes/lambda/http/createBrewRecipe.handler
      iamRoleStatements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
          Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.BREW_RECIPES_TABLE}
        - Effect: Allow
          Action:
            - xray:PutTraceSegments
            - xray:PutTelemetryRecords
          Resource: '*'
        - Effect: Allow
          Action:
            - cloudwatch:PutMetricData
          Resource: '*'
      events:
        - http:
            method: post
            path: brewRecipes
            cors: true
            authorizer: Auth
            reqValidatorName: RequestBodyValidator
            documentation:
              summary: Create a new V60 Brew Recipe
              description: Create a new Hario V60 Brew Recipes for the current logged-in User
              requestModels:
                'application/json': CreateBrewRecipeRequest

      UpdateBrewRecipe:
        handler: src/brew-recipes/lambda/http/updateBrewRecipe.handler
        iamRoleStatements:
          - Effect: Allow
            Action:
              - dynamodb:UpdateItem
            Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.BREW_RECIPES_TABLE}
          - Effect: Allow
            Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Resource: '*'
          - Effect: Allow
            Action:
              - cloudwatch:PutMetricData
            Resource: '*'
        events:
          - http:
              method: patch
              path: brewRecipes/{recipeId}
              cors: true
              authorizer: Auth
              reqValidatorName: RequestBodyValidator
              documentation:
                summary: Update a V60 Brew Recipe
                description: Update a Hario V60 Brew Recipe belonging to the current logged-in User
                requestModels:
                  'application/json': UpdateBrewRecipeRequest

      DeleteBrewRecipe:
        handler: src/brew-recipes/lambda/http/deleteBrewRecipe.handler
        iamRoleStatements:
          - Effect: Allow
            Action:
              - dynamodb:DeleteItem
            Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.BREW_RECIPES_TABLE}
          - Effect: Allow
            Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Resource: '*'
          - Effect: Allow
            Action:
              - cloudwatch:PutMetricData
            Resource: '*'
        events:
          - http:
              method: delete
              path: brewRecipes/{recipeId}
              cors: true
              authorizer: Auth
              documentation:
                summary: Delete a V60 Brew Recipe
                description: Delete a Hario V60 Brew Recipe belonging to the current logged-in User

        GetRecipeSteps:
          handler: src/brew-recipes/lambda/http/getRecipeSteps.handler
          iamRoleStatements:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:Query
              Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.RECIPE_STEPS_TABLE}
            - Effect: Allow
              Action:
                - xray:PutTraceSegments
                - xray:PutTelemetryRecords
              Resource: '*'
            - Effect: Allow
              Action:
                - cloudwatch:PutMetricData
              Resource: '*'
          events:
            - http:
                method: get
                path: brewRecipes/{recipeId}/steps
                cors: true
                authorizer: Auth
                documentation:
                  summary: Get all Recipe Steps by Recipe Id
                  description: Get all Recipe Steps for a V60 Brew Recipe

        CreateRecipeStep:
          handler: src/brew-recipes/lambda/http/createRecipeStep.handler
          iamRoleStatements:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.RECIPE_STEPS_TABLE}
            - Effect: Allow
              Action:
                - xray:PutTraceSegments
                - xray:PutTelemetryRecords
              Resource: '*'
            - Effect: Allow
              Action:
                - cloudwatch:PutMetricData
              Resource: '*'
          events:
            - http:
              method: post
              path: brewRecipes/{recipeId}/steps
              cors: true
              authorizer: Auth
              reqValidatorName: RequestBodyValidator
              documentation:
                summary: Create a Recipe Step
                description: Create a recipe step for a V60 Brew Recipe
                requestModels:
                  'application/json': CreateRecipeStepRequest

        UpdateRecipeStep:
          handler: src/brew-recipes/lambda/http/updateRecipeStep.handler
          iamRoleStatements:
            - Effect: Allow
              Action:
                - dynamodb:UpdateItem
              Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.RECIPE_STEPS_TABLE}
            - Effect: Allow
              Action:
                - xray:PutTraceSegments
                - xray:PutTelemetryRecords
              Resource: '*'
            - Effect: Allow
              Action:
                - cloudwatch:PutMetricData
              Resource: '*'
          events:
            - http:
                method: patch
                path: brewRecipes/{recipeId}/steps/{stepId}
                cors: true
                authorizer: Auth
                reqValidatorName: RequestBodyValidator
                documentation:
                  summary: Update a Recipe Step
                  description: Update a recipe step for a V60 Brew Recipe
                  requestModels:
                    'application/json': UpdateRecipeStepRequest

        DeleteRecipeStep:
          handler: src/brew-recipes/lambda/http/deleteRecipeStep.handler
          iamRoleStatements:
            - Effect: Allow
              Action:
                - dynamodb:DeleteItem
              Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.RECIPE_STEPS_TABLE}
            - Effect: Allow
              Action:
                - xray:PutTraceSegments
                - xray:PutTelemetryRecords
              Resource: '*'
            - Effect: Allow
              Action:
                - cloudwatch:PutMetricData
              Resource: '*'
          events:
            - http:
                method: delete
                path: brewRecipes/{recipeId}/steps/{stepId}
                cors: true
                authorizer: Auth
                documentation:
                  summary: Delete a Recipe Step
                  description: Delete a Step for a V60 Brew Recipe

        GenerateUploadUrl:
          handler: src/brew-recipes/lambda/http/generateUploadUrl.handler
          iamRoleStatements:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:PutObject
              Resource: arn:aws:s3:::${self:provider.environment.RECIPE_STEP_RAW_IMAGES_BUCKET}/*
            - Effect: Allow
              Action:
                - xray:PutTraceSegments
                - xray:PutTelemetryRecords
              Resource: '*'
            - Effect: Allow
              Action:
                - cloudwatch:PutMetricData
              Resource: '*'
          events:
            - http:
                method: post
                path: brewRecipes/{recipeId}/steps/${stepId}/image
                cors: true
                authorizer: Auth
                documentation:
                  summary: Get a Signed Url to Upload an Image
                  description: Returns a signed Url that allows an image of the Recipe Step to be uploaded

        ResizeImageOnUpload:
          handler: src/brew-recipes/lambda/sns/resizeImage.handler
          iamRoleStatements:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:PutObject
            - Effect: Allow
              Action:
                - xray:PutTraceSegments
                - xray:PutTelemetryRecords
              Resource: '*'
            - Effect: Allow
              Action:
                - cloudwatch:PutMetricData
              Resource: '*'
          events:
            - sns:
                topicName: ${self:custom.recipeStepImageUploadTopic}
                arn:
                  Fn::Join:
                    - ':'
                    - - arn:aws:sns
                      - Ref: AWS::Region
                      - Ref: AWS::AccountId
                      - ${self:custom.recipeStepImageUploadTopic}

resources:
  Resources:
    
    BrewRecipesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.BREW_RECIPES_TABLE}
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: recipeId
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: recipeId
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
    
    RecipeStepsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.RECIPE_STEPS_TABLE}
        KeySchema:
          - AttributeName: recipeId
            KeyType: HASH
          - AttributeName: stepId
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: recipeId
            AttributeType: S
          - AttributeName: stepId
            AttributeType: S
        BillingMode: PAY_PER_REQUEST

    RecipeStepThumbnailsBucket:
      Type: AWS::S3::Bucket
      DependsOn: ImageResizedTopicPolicy
      Properties:
        BucketName: ${self:provider.environment.RECIPE_STEP_THUMBNAILS_BUCKET}
        NotificationConfiguration:
          TopicConfigurations:
            - Event: s3:ObjectCreated:Put
              Topic: !Ref ImageResizedTopic
        CorsConfiguration:
          CorsRules:
            - AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
                - HEAD
              AllowedOrigins:
                - '*'
              AllowedHeaders:
                - '*'
              MaxAge: 3000

    RecipeStepRawImagesBucket:
      Type: AWS::S3::Bucket
      DependsOn: RecipeStepImageUploadTopicPolicy
      Properties:
        BucketName: ${self:provider.environment.RECIPE_STEP_RAW_IMAGES_BUCKET}
        NotificationConfiguration:
          TopicConfigurations:
          - Event: s3:ObjectCreated:Put
            Topic: !Ref RecipeStepImageUploadTopic
        CorsConfiguration:
          CorsRules:
            - AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
                - HEAD
              AllowedOrigins:
                - '*'
              AllowedHeaders:
                - '*'
              MaxAge: 3000

    RecipeStepImageUploadTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: Recipe Step Image Upload Event
        TopicName: ${self:custom.recipeStepImageUploadTopic}

    RecipeStepImageUploadTopicPolicy:
      Type: AWS::SNS::TopicPolicy
      Properties:
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                AWS: '*'
              Action: sns:Publish
              Resource: !Ref RecipeStepImageUploadTopic
              Condition:
                ArnLike:
                  AWS:SourceArn: arn:aws:s3:::${self:provider.environment.RECIPE_STEP_RAW_IMAGES_BUCKET}
        Topics:
          - !Ref RecipeStepImageUploadTopic

    ImageResizedTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: Recipe Step Image Resized Event
        TopicName: ${self:custom.imageResizedTopic}

    ImageResizedTopicPolicy:
      Type: AWS::SNS::TopicPolicy
      Properties:
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                AWS: '*'
              Action: sns:Publish
              Resource: !Ref ImageResizedTopic
              Condition:
                ArnLike:
                  AWS:SourceArn: arn:aws:s3:::${self:provider.environment.RECIPE_STEP_THUMBNAILS_BUCKET}
        Topics:
          - !Ref ImageResizedTopic

    RequestBodyValidator:
      Type: AWS::ApiGateway::RequestValidator
      Properties:
        RestApiId: 
          Ref: ApiGatewayRestApi
        Name: 'request-body-validator'
        ValidateRequestBody: true
        ValidateRequestParameters: false

