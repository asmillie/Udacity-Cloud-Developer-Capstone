service: udacity-capstone

plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-2'}
  lambdaHashingVersion: '20201221'
  apiGateway:
    shouldStartNameWithService: true
  tracing:
    apiGateway: true
    lambda: true
  environment:
    SIGNED_URL_EXPIRATION: 300
    BREW_RECIPES_TABLE: BrewRecipes-${self:provider.stage}
    RECIPE_STEPS_TABLE: RecipeSteps-${self:provider.stage}
    RECIPE_STEP_THUMBNAILS_BUCKET: RecipeStepThumbnails-${self:provider.stage}
    RECIPE_STEP_RAW_IMAGES_BUCKET: RecipeStepRawImage-${self:provider.stage}
    METRIC_NAMESPACE: ${self:service}-${self:provider.stage}

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true
    packager: 'npm'
  recipeStepImageUploadTopic: RecipeStepImageUploadTopic-${self:provider.stage}
  imageResizedTopic: ImageResizedTopic-${self:provider.stage}

functions:

  Auth:
    handler: src/auth/lambda/auth0Authorizer.handler
    iamRoleStatements: []

  GetBrewRecipes:
    handler: src/brew-recipes/lambda/http/getBrewRecipes.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:Query
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.BREW_RECIPES_TABLE}
      - Effect: Allow
        Action:
          - xray:PutTraceSegments
          - xray:PutTelemetryRecords
        Resource: '*'
      - Effect: Allow
        Action:
          - cloudwatch:PutMetricData
        Resource: '*'
    events:
      - http:
          method: get
          path: brewRecipes
          cors: true
          authorizer: Auth

  CreateBrewRecipe:
    handler: src/brew-recipes/lambda/http/createBrewRecipe.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.BREW_RECIPES_TABLE}
      - Effect: Allow
        Action:
          - xray:PutTraceSegments
          - xray:PutTelemetryRecords
        Resource: '*'
      - Effect: Allow
        Action:
          - cloudwatch:PutMetricData
        Resource: '*'
    events:
      - http:
          method: post
          path: brewRecipes
          cors: true
          authorizer: Auth
          request:
            schema:
              application/json: ${file(models/create-brew-recipe-request.json)}

  UpdateBrewRecipe:
    handler: src/brew-recipes/lambda/http/updateBrewRecipe.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.BREW_RECIPES_TABLE}
      - Effect: Allow
        Action:
          - xray:PutTraceSegments
          - xray:PutTelemetryRecords
        Resource: '*'
      - Effect: Allow
        Action:
          - cloudwatch:PutMetricData
        Resource: '*'
    events:
      - http:
          method: patch
          path: brewRecipes/{recipeId}
          cors: true
          authorizer: Auth
          request:
            schema:
              application/json: ${file(models/update-brew-recipe-request.json)}

  DeleteBrewRecipe:
    handler: src/brew-recipes/lambda/http/deleteBrewRecipe.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:DeleteItem
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.BREW_RECIPES_TABLE}
      - Effect: Allow
        Action:
          - xray:PutTraceSegments
          - xray:PutTelemetryRecords
        Resource: '*'
      - Effect: Allow
        Action:
          - cloudwatch:PutMetricData
        Resource: '*'
    events:
      - http:
          method: delete
          path: brewRecipes/{recipeId}
          cors: true
          authorizer: Auth

  GetRecipeSteps:
    handler: src/brew-recipes/lambda/http/getRecipeSteps.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:Query
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.RECIPE_STEPS_TABLE}
      - Effect: Allow
        Action:
          - xray:PutTraceSegments
          - xray:PutTelemetryRecords
        Resource: '*'
      - Effect: Allow
        Action:
          - cloudwatch:PutMetricData
        Resource: '*'
    events:
      - http:
          method: get
          path: brewRecipes/{recipeId}/steps
          cors: true
          authorizer: Auth

  CreateRecipeStep:
    handler: src/brew-recipes/lambda/http/createRecipeStep.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.RECIPE_STEPS_TABLE}
      - Effect: Allow
        Action:
          - xray:PutTraceSegments
          - xray:PutTelemetryRecords
        Resource: '*'
      - Effect: Allow
        Action:
          - cloudwatch:PutMetricData
        Resource: '*'
    events:
      - http:
          method: post
          path: brewRecipes/{recipeId}/steps
          cors: true
          authorizer: Auth
          request:
            schema:
              application/json: ${file(models/create-recipe-step-request.json)}

  UpdateRecipeStep:
    handler: src/brew-recipes/lambda/http/updateRecipeStep.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.RECIPE_STEPS_TABLE}
      - Effect: Allow
        Action:
          - xray:PutTraceSegments
          - xray:PutTelemetryRecords
        Resource: '*'
      - Effect: Allow
        Action:
          - cloudwatch:PutMetricData
        Resource: '*'
    events:
      - http:
          method: patch
          path: brewRecipes/{recipeId}/steps/{stepId}
          cors: true
          authorizer: Auth
          request:
            schema:
              application/json: ${file(models/update-recipe-step-request.json)}

  DeleteRecipeStep:
    handler: src/brew-recipes/lambda/http/deleteRecipeStep.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:DeleteItem
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.RECIPE_STEPS_TABLE}
      - Effect: Allow
        Action:
          - xray:PutTraceSegments
          - xray:PutTelemetryRecords
        Resource: '*'
      - Effect: Allow
        Action:
          - cloudwatch:PutMetricData
        Resource: '*'
    events:
      - http:
          method: delete
          path: brewRecipes/{recipeId}/steps/{stepId}
          cors: true
          authorizer: Auth

  GenerateUploadUrl:
    handler: src/brew-recipes/lambda/http/generateUploadUrl.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - s3:GetObject
          - s3:PutObject
        Resource: arn:aws:s3:::${self:provider.environment.RECIPE_STEP_RAW_IMAGES_BUCKET}/*
      - Effect: Allow
        Action:
          - xray:PutTraceSegments
          - xray:PutTelemetryRecords
        Resource: '*'
      - Effect: Allow
        Action:
          - cloudwatch:PutMetricData
        Resource: '*'
    events:
      - http:
          method: post
          path: brewRecipes/{recipeId}/steps/{stepId}/image
          cors: true
          authorizer: Auth

  ResizeImageOnUpload:
    handler: src/brew-recipes/lambda/sns/resizeAndSaveImage.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - s3:GetObject
        Resource: arn:aws:s3:::${self:provider.environment.RECIPE_STEP_RAW_IMAGES_BUCKET}/*
      - Effect: Allow
        Action:
          - s3:PutObject
        Resource: arn:aws:s3:::${self:provider.environment.RECIPE_STEP_THUMBNAILS_BUCKET}/*
      - Effect: Allow
        Action:
          - xray:PutTraceSegments
          - xray:PutTelemetryRecords
        Resource: '*'
      - Effect: Allow
        Action:
          - cloudwatch:PutMetricData
        Resource: '*'
    events:
      - sns:
          topicName: ${self:custom.recipeStepImageUploadTopic}
          arn:
            Fn::Join:
              - ':'
              - - arn:aws:sns
                - Ref: AWS::Region
                - Ref: AWS::AccountId
                - ${self:custom.recipeStepImageUploadTopic}

  DeleteRawImage:
    handler: src/brew-recipes/lambda/sns/deleteRawImage.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - s3:DeleteObject
        Resource: arn:aws:s3:::${self:provider.environment.RECIPE_STEP_RAW_IMAGES_BUCKET}/*
      - Effect: Allow
        Action:
          - xray:PutTraceSegments
          - xray:PutTelemetryRecords
        Resource: '*'
      - Effect: Allow
        Action:
          - cloudwatch:PutMetricData
        Resource: '*'
    events:
      - sns:
          topicName: ${self:custom.imageResizedTopic}
          arn:
            Fn::Join:
              - ':'
              - - arn:aws:sns
                - Ref: AWS::Region
                - Ref: AWS::AccountId
                - ${self:custom.imageResizedTopic}

resources:
  Resources:
    
    BrewRecipesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.BREW_RECIPES_TABLE}
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: recipeId
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: recipeId
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
    
    RecipeStepsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.RECIPE_STEPS_TABLE}
        KeySchema:
          - AttributeName: recipeId
            KeyType: HASH
          - AttributeName: stepId
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: recipeId
            AttributeType: S
          - AttributeName: stepId
            AttributeType: S
        BillingMode: PAY_PER_REQUEST

    RecipeStepThumbnailsBucket:
      Type: AWS::S3::Bucket
      DependsOn: ImageResizedTopicPolicy
      Properties:
        BucketName: ${self:provider.environment.RECIPE_STEP_THUMBNAILS_BUCKET}
        NotificationConfiguration:
          TopicConfigurations:
            - Event: s3:ObjectCreated:Put
              Topic: !Ref ImageResizedTopic
        CorsConfiguration:
          CorsRules:
            - AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
                - HEAD
              AllowedOrigins:
                - '*'
              AllowedHeaders:
                - '*'
              MaxAge: 3000

    RecipeStepRawImagesBucket:
      Type: AWS::S3::Bucket
      DependsOn: RecipeStepImageUploadTopicPolicy
      Properties:
        BucketName: ${self:provider.environment.RECIPE_STEP_RAW_IMAGES_BUCKET}
        NotificationConfiguration:
          TopicConfigurations:
          - Event: s3:ObjectCreated:Put
            Topic: !Ref RecipeStepImageUploadTopic
        CorsConfiguration:
          CorsRules:
            - AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
                - HEAD
              AllowedOrigins:
                - '*'
              AllowedHeaders:
                - '*'
              MaxAge: 3000

    RecipeStepImageUploadTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: Recipe Step Image Upload Event
        TopicName: ${self:custom.recipeStepImageUploadTopic}

    RecipeStepImageUploadTopicPolicy:
      Type: AWS::SNS::TopicPolicy
      Properties:
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                AWS: '*'
              Action: sns:Publish
              Resource: !Ref RecipeStepImageUploadTopic
              Condition:
                ArnLike:
                  AWS:SourceArn: arn:aws:s3:::${self:provider.environment.RECIPE_STEP_RAW_IMAGES_BUCKET}
        Topics:
          - !Ref RecipeStepImageUploadTopic

    ImageResizedTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: Recipe Step Image Resized Event
        TopicName: ${self:custom.imageResizedTopic}

    ImageResizedTopicPolicy:
      Type: AWS::SNS::TopicPolicy
      Properties:
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                AWS: '*'
              Action: sns:Publish
              Resource: !Ref ImageResizedTopic
              Condition:
                ArnLike:
                  AWS:SourceArn: arn:aws:s3:::${self:provider.environment.RECIPE_STEP_THUMBNAILS_BUCKET}
        Topics:
          - !Ref ImageResizedTopic

    GatewayResponseDefault4XX:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseType: DEFAULT_4XX
        RestApiId: 
          Ref: 'ApiGatewayRestApi'
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization'"
          gatewayresponse.header.Access-Control-Allow-Methods: "'GET,OPTIONS,POST'"
          